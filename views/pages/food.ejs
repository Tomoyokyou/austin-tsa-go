<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Food - Austin TSA Go</title>
    <% include ../partials/header.ejs %>
  </head>
  <body class="Site">
    <div class="food-page-background"></div>
    <div class="ui container">
      <% include ../partials/nav.ejs %>

      <div class="ui two column grid">
        <div class="four wide column">
          <div class="ui card">
            <div class="content">
              <div class="header">Please Select</div>
            </div>
            <div class="content">
              <h4 class="ui sub header">Food Type</h4>
                <div class="ui small feed">
                  <div class="ui form">
                    <div class="inline field">
                      <div class="ui checked checkbox" id="checkbox-taiwanese">
                        <input type="checkbox" tabindex="0" class="hidden" checked="">
                        <label>Taiwanese</label>
                      </div>
                    </div>
                    <div class="inline field">
                      <div class="ui checked checkbox" id="checkbox-japanese">
                        <input type="checkbox" tabindex="0" class="hidden" checked="">
                        <label>Japanese</label>
                      </div>
                      <label></label>
                    </div>
                    <div class="inline field">
                      <div class="ui checked checkbox" id="checkbox-mexican">
                        <input type="checkbox" tabindex="0" class="hidden" checked="">
                        <label>Mexican</label>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <!-- <div class="extra content">
                <h4 class="ui sub header">Bus route</h4>
                <div class="ui form">
                  <div class="inline field">
                    <div class="ui checkbox">
                      <input type="checkbox" tabindex="0" class="hidden">
                      <label>670-CP CROSSING PLACE</label>
                    </div>
                  </div>
                  <div class="inline field">
                    <div class="ui checkbox">
                      <input type="checkbox" tabindex="0" class="hidden">
                      <label>641-EC EAST CAMPUS</label>
                    </div>
                    <label></label>
                  </div>
                  <div class="inline field">
                    <div class="ui checkbox">
                      <input type="checkbox" tabindex="0" class="hidden" >
                      <label>661-FW FAR WEST/UT</label>
                    </div>
                  </div>
                </div>
              </div> -->

              <!-- <div class="extra content">
                <button class="ui button" id="toggle">Apply Filter</button>
              </div> -->
            </div>
          </div>

        <div class="twelve wide column">
          <div id="map" style="height: 600px;"></div>
        </div>
      </div>
    </div>


    <script type="text/javascript">
      $(function() {

        // $('#toggle1').checkbox({
        //     onChange: function() {
        //       console.log('aaa');
        //     }
        // });
      });

      function openInNewTab(url) {
        var win = window.open(url, '_blank');
        win.focus();
      }

      var markers = {
        <% for(var i = 0; i < restaurant_list.length; ++i) { %>
          "<%= restaurant_list[i].name %>" : {
            "lat": "<%= restaurant_list[i].location.lat %>",
            "lng": "<%= restaurant_list[i].location.lng %>",
            "name": "<%= restaurant_list[i].name %>",
            "catagory": "<%= restaurant_list[i].catagory %>",
            "visible": true
          }
          <% if(i != restaurant_list.length - 1) { %>
            ,
          <% } %>
        <% } %>
      }

      var posMarkers = {}, infoWindows = {};
      var styles = {
        default: null,
        retro: [
          {elementType: 'geometry', stylers: [{color: '#ebe3cd'}]},
          {elementType: 'labels.text.fill', stylers: [{color: '#523735'}]},
          {elementType: 'labels.text.stroke', stylers: [{color: '#f5f1e6'}]},
          {
            featureType: 'administrative',
            elementType: 'geometry.stroke',
            stylers: [{color: '#c9b2a6'}]
          },
          {
            featureType: 'administrative.land_parcel',
            elementType: 'geometry.stroke',
            stylers: [{color: '#dcd2be'}]
          },
          {
            featureType: 'administrative.land_parcel',
            elementType: 'labels.text.fill',
            stylers: [{color: '#ae9e90'}]
          },
          {
            featureType: 'landscape.natural',
            elementType: 'geometry',
            stylers: [{color: '#dfd2ae'}]
          },
          {
            featureType: 'poi',
            elementType: 'geometry',
            stylers: [{color: '#dfd2ae'}]
          },
          {
            featureType: 'poi',
            elementType: 'labels.text.fill',
            stylers: [{color: '#93817c'}]
          },
          {
            featureType: 'poi.park',
            elementType: 'geometry.fill',
            stylers: [{color: '#a5b076'}]
          },
          {
            featureType: 'poi.park',
            elementType: 'labels.text.fill',
            stylers: [{color: '#447530'}]
          },
          {
            featureType: 'road',
            elementType: 'geometry',
            stylers: [{color: '#f5f1e6'}]
          },
          {
            featureType: 'road.arterial',
            elementType: 'geometry',
            stylers: [{color: '#fdfcf8'}]
          },
          {
            featureType: 'road.highway',
            elementType: 'geometry',
            stylers: [{color: '#f8c967'}]
          },
          {
            featureType: 'road.highway',
            elementType: 'geometry.stroke',
            stylers: [{color: '#e9bc62'}]
          },
          {
            featureType: 'road.highway.controlled_access',
            elementType: 'geometry',
            stylers: [{color: '#e98d58'}]
          },
          {
            featureType: 'road.highway.controlled_access',
            elementType: 'geometry.stroke',
            stylers: [{color: '#db8555'}]
          },
          {
            featureType: 'road.local',
            elementType: 'labels.text.fill',
            stylers: [{color: '#806b63'}]
          },
          {
            featureType: 'transit.line',
            elementType: 'geometry',
            stylers: [{color: '#dfd2ae'}]
          },
          {
            featureType: 'transit.line',
            elementType: 'labels.text.fill',
            stylers: [{color: '#8f7d77'}]
          },
          {
            featureType: 'transit.line',
            elementType: 'labels.text.stroke',
            stylers: [{color: '#ebe3cd'}]
          },
          {
            featureType: 'transit.station',
            elementType: 'geometry',
            stylers: [{color: '#dfd2ae'}]
          },
          {
            featureType: 'water',
            elementType: 'geometry.fill',
            stylers: [{color: '#b9d3c2'}]
          },
          {
            featureType: 'water',
            elementType: 'labels.text.fill',
            stylers: [{color: '#92998d'}]
          }
        ]
      };

      function initMap() {
        var UTlocation = {lat: 30.2849, lng: -97.7341}
        var mapOptions = {
          zoom: 14,
          center: UTlocation
        }
        var map = new google.maps.Map(document.getElementById('map'), mapOptions);
        var image = 'http://www.myiconfinder.com/uploads/iconsets/32-32-a5485b563efc4511e0cd8bd04ad0fe9e.png';

        for (marker in markers) {
          posMarkers[marker] = new google.maps.Marker({
            position: new google.maps.LatLng(markers[marker].lat, markers[marker].lng),
            map: map,
            icon: image,
            visible: markers[marker].visible
          });

          infoWindows[marker] = new google.maps.InfoWindow({
            content: markers[marker].name
          });

          posMarkers[marker].addListener('mouseover', function(innerKey) {
            return function() {
              infoWindows[innerKey].open(map, posMarkers[innerKey]);
            }
          }(marker));

          posMarkers[marker].addListener('mouseout', function(innerKey) {
            return function() {
              infoWindows[innerKey].close(map, posMarkers[innerKey]);
            }
          }(marker));

          posMarkers[marker].addListener('click', function(innerKey) {
            return function() {
              openInNewTab("https://www.google.com/maps/?q=" + markers[innerKey].lat + "," + markers[innerKey].lng);
            }
          }(marker));
        }

        $('#checkbox-taiwanese').checkbox('setting', 'onChange', function() {
          for (var marker in markers) {
            if (markers[marker].catagory == "Taiwanese") {
              if(posMarkers[marker].getVisible()) {
                posMarkers[marker].setVisible(false);
              }
              else {
                posMarkers[marker].setVisible(true);
              }
            }
          }
        });

        $('#checkbox-japanese').checkbox('setting', 'onChange', function() {
          for (var marker in markers) {
            if (markers[marker].catagory == "Japanese") {
              if(posMarkers[marker].getVisible()) {
                posMarkers[marker].setVisible(false);
              }
              else {
                posMarkers[marker].setVisible(true);
              }
            }
          }
        });

        $('#checkbox-mexican').checkbox('setting', 'onChange', function() {
          for (var marker in markers) {
            if (markers[marker].catagory == "Mexican") {
              if(posMarkers[marker].getVisible()) {
                posMarkers[marker].setVisible(false);
              }
              else {
                posMarkers[marker].setVisible(true);
              }
            }
          }
        });

        // Set the map's style to the initial value of the selector.
        map.setOptions({styles: styles['retro']});
      }


    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqSZN4x6BL2glI3tRmXSBLryKO1m1ugBA&callback=initMap">
    </script>
  </body>
</html>
